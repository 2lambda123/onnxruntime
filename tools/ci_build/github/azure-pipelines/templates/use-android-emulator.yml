# Specify use of a specific Xcode version.

parameters:
- name: create
  type: boolean
  default: false
- name: start
  type: boolean
  default: false
- name: stop
  type: boolean
  default: false


steps:
  - ${{ if eq(parameters.create, true) }}:
    - script: |
        set -e -x
        python3 tools/python/run_android_emulator.py \
          --android-sdk-root $(ANDROID_SDK_ROOT) \
          --create-avd --system-image "system-images;android-30;default;x86_64"
      displayName: Create Android Emulator
      condition: eq(${{ parameters.action }}, 'create')

  - ${{ if eq(parameters.start, true) }}:
    - script: |
        if test -f $(Build.BinariesDirectory)/emulator.pid; then
          echo "Emulator PID file was not expected to exist but does and has pid:" \
            `cat $(Build.BinariesDirectory)/emulator.pid`
          exit 1
        fi
      displayName: Check emulator.pid does not exist
      condition: eq(${{ parameters.action }}, 'start')

    - script: |
        set -e -x
        python3 tools/python/run_android_emulator.py \
          --android-sdk-root $(ANDROID_SDK_ROOT) \
          --start --emulator-extra-args="-partition-size 2047 -verbose" \
          --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
        echo "Emulator PID:"`cat $(Build.BinariesDirectory)/emulator.pid`
      displayName: Start Android Emulator
      condition: eq(${{ parameters.action }}, 'start')

  - ${{ if eq(parameters.stop, true) }}:
    - script: |
        set -e -x
        python3 -m pip install psutil
      displayName: Install psutil for emulator shutdown by run_android_emulator.py
      condition: eq(${{ parameters.action }}, 'stop')

    - script: |
        if test -f $(Build.BinariesDirectory)/emulator.pid; then
          echo "Emulator PID:"`cat $(Build.BinariesDirectory)/emulator.pid`
          python3 tools/python/run_android_emulator.py \
            --android-sdk-root $(ANDROID_SDK_ROOT) \
            --stop \
            --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
          rm $(Build.BinariesDirectory)/emulator.pid
        else
          echo "Emulator PID file was expected to exist but does not."
        fi
      displayName: Stop Android Emulator
      condition: always()

parameters:
- name: arch
  type: string

- name: device
  type: string

- name: machine_pool
  type: string

- name: extra_job_id
  type: string
  default: ''

- name: python_wheel_suffix
  type: string
  default: ''


# TODO: Ideally it should fetch information from the build that triggers it
- name: cmake_build_type
  type: string
  default: 'Release'
  values:
   - Debug
   - Release
   - RelWithDebInfo
   - MinSizeRel

- name: timeout
  type: number
  default: 120

jobs:
- job: Linux_Test_${{ parameters.device }}${{ parameters.extra_job_id }}_${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}
  variables:
    skipComponentGovernanceDetection: true
  workspace:
    clean: all
  pool: ${{ parameters.machine_pool }}
  steps:
  # The public ADO project
  # - ${{ if eq(variables['System.CollectionId'], 'f3ad12f2-e480-4533-baf2-635c95467d29') }}:

  # The private ADO project
  - ${{ if eq(variables['System.CollectionId'], 'bc038106-a83b-4dab-9dd3-5a41bc58f34c') }}:
    - download: build   # pipeline resource identifier.
      artifact: 'drop-linux-${{ lower(parameters.device) }}-${{ parameters.arch }}'

    - download: build   # pipeline resource identifier.
      artifact: 'onnxruntime${{ parameters.python_wheel_suffix }}'

    - bash: |
        set -e -x
        ls $(Pipeline.Workspace)/build
        mv "$(Pipeline.Workspace)/build/drop-linux-${{ lower(parameters.device) }}-${{ parameters.arch }}" $(Build.BinariesDirectory)/${{parameters.cmake_build_type}}
        mv "$(Pipeline.Workspace)/build/onnxruntime${{ parameters.python_wheel_suffix }}" "$(Build.BinariesDirectory)/whl"

  - task: Bash@3
    displayName: 'Bash Script'
    inputs:
      targetType: filePath
      filePath: tools/ci_build/github/linux/run_python_tests.sh
      arguments: -d ${{ parameters.device }} -c ${{parameters.cmake_build_type}}

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()

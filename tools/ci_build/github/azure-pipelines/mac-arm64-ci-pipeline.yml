jobs:
- job: MacArm64Build

  pool: onnxruntime-mac-m1-cpu

  variables:
    condaEnvName: onnxruntime_ci_env
    pythonVersion: 3.9
    cmakeVersion: 3.27.4
    jobTimeoutInMinutes: 60

  timeoutInMinutes: $(jobTimeoutInMinutes)

  workspace:
    clean: all

  steps:
  - bash: |
      caffeinate -s -t $(( $(jobTimeoutInMinutes) * 60 )) &
    displayName: Prevent machine from going to sleep

  # Note: We will use a dedicated conda environment to keep the Python dependencies contained.
  # On a hosted agent this would not be necessary.
  - bash: |
      echo "##vso[task.prependpath]/usr/local/miniconda3/bin"
    displayName: Add Conda to PATH

  - bash: |
      set -e -x
      conda create --name $(condaEnvName) --yes python=$(pythonVersion)

      # Do not output ##vso[] commands with `set -x` or they may be parsed again and include a trailing quote.
      set +x
      # 'conda activate' doesn't work in this context, so we just prepend the env directory to path
      CONDA_ENV_BIN_DIR="${HOME}/.conda/envs/$(condaEnvName)/bin"
      echo "##vso[task.prependpath]${CONDA_ENV_BIN_DIR}"
    displayName: Create conda environment '$(condaEnvName)' and add to PATH

  - bash: |
      python -m pip install cmake~=$(cmakeVersion).0
    displayName: Install CMake $(cmakeVersion)

  - bash: |
      python $(Build.SourcesDirectory)/tools/ci_build/build.py \
        --build_dir $(Build.BinariesDirectory) \
        --build_apple_framework \
        --build_shared_lib \
        --use_coreml \
        --enable_training_apis \
        --update --build --parallel --test
    displayName: Build and test onnxruntime

  - bash: |
      conda env remove --name $(condaEnvName) --yes
    displayName: Remove conda environment '$(condaEnvName)'
    condition: always()
